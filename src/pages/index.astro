
---
import Layout from '../layouts/Layout.astro';
import { docsStructure } from '../layouts/lib/docsStructure';
---

<Layout title="Helper.DB - Documentação">
  <main>
    <!-- Hero Section -->
    <section class="relative overflow-hidden">
      <div class="absolute inset-0 bg-gradient-to-br from-blue-600/20 via-purple-600/20 to-pink-600/20"></div>
      <div class="absolute inset-0 bg-[url('data:image/svg+xml,%3Csvg width="60" height="60" viewBox="0 0 60 60" xmlns="http://www.w3.org/2000/svg"%3E%3Cg fill="none" fill-rule="evenodd"%3E%3Cg fill="%239C92AC" fill-opacity="0.1"%3E%3Ccircle cx="30" cy="30" r="4"/%3E%3C/g%3E%3C/g%3E%3C/svg%3E')]"></div>
      <div class="relative container mx-auto px-4 py-20 lg:py-32">
        <div class="text-center max-w-4xl mx-auto">
          <h1 class="text-5xl lg:text-7xl font-bold mb-6">
            <span class="bg-gradient-to-r from-blue-400 via-purple-500 to-pink-500 bg-clip-text text-transparent">
              Helper.DB
            </span>
          </h1>
          <p class="text-xl lg:text-2xl text-gray-300 mb-8 max-w-3xl mx-auto leading-relaxed">
            Uma biblioteca JavaScript poderosa e flexível para trabalhar com diferentes tipos de banco de dados
            de forma <span class="text-blue-400 font-semibold">simples</span> e <span class="text-purple-400 font-semibold">unificada</span>.
          </p>
          <div class="flex flex-col sm:flex-row gap-4 justify-center items-center">
            <a 
              href="/docs" 
              class="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 px-8 py-3 rounded-lg font-semibold transition-all transform hover:scale-105 shadow-lg"
            >
              Começar Agora
            </a>
            <a 
              href="https://github.com/helperdb/helperdb" 
              target="_blank"
              class="border border-gray-600 hover:border-gray-500 px-8 py-3 rounded-lg font-semibold transition-all hover:bg-gray-800"
            >
              Ver no GitHub
            </a>
          </div>
        </div>
      </div>
    </section>

    <!-- Features Section -->
    <section class="py-20 bg-gray-800/50">
      <div class="container mx-auto px-4">
        <div class="text-center mb-16">
          <h2 class="text-3xl lg:text-4xl font-bold mb-4">Recursos Principais</h2>
          <p class="text-gray-400 text-lg max-w-2xl mx-auto">
            Descubra todas as funcionalidades que tornam o Helper.DB a escolha ideal para seus projetos
          </p>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {docsStructure.map((category) => (
            <div class="group bg-gray-800/80 backdrop-blur-sm rounded-xl p-6 border border-gray-700 hover:border-gray-600 transition-all hover:transform hover:scale-105">
              <div class="flex items-center mb-4">
                <div class="text-3xl mr-4 group-hover:scale-110 transition-transform">
                  {category.icon}
                </div>
                <h3 class="text-xl font-semibold text-white group-hover:text-blue-400 transition-colors">
                  {category.title}
                </h3>
              </div>
              <p class="text-gray-400 mb-6 leading-relaxed">
                {category.description}
              </p>
              <div class="space-y-3">
                {category.items.slice(0, 3).map((item) => (
                  <a 
                    href={`/docs/${category.slug}/${item.slug}`}
                    class="block text-gray-300 hover:text-blue-400 transition-colors text-sm hover:translate-x-1 transform transition-transform"
                  >
                    → {item.title}
                  </a>
                ))}
                {category.items.length > 3 && (
                  <a 
                    href={`/docs`}
                    class="block text-blue-400 hover:text-blue-300 transition-colors text-sm font-medium"
                  >
                    Ver todos os {category.items.length} métodos →
                  </a>
                )}
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>

    <!-- Quick Start Section -->
    <section class="py-20">
      <div class="container mx-auto px-4">
        <div class="max-w-4xl mx-auto">
          <div class="text-center mb-12">
            <h2 class="text-3xl lg:text-4xl font-bold mb-4">Comece em Segundos</h2>
            <p class="text-gray-400 text-lg">
              Instale e configure o Helper.DB em poucos passos
            </p>
          </div>
          
          <div class="bg-gray-800 rounded-xl p-6 border border-gray-700">
            <div class="flex items-center justify-between mb-4">
              <span class="text-gray-400 text-sm">Instalação</span>
              <button class="text-gray-400 hover:text-white transition-colors text-sm">
                Copiar
              </button>
            </div>
            <pre class="text-green-400 font-mono text-sm overflow-x-auto"><code>npm install helper.db</code></pre>
          </div>
          
          <div class="bg-gray-800 rounded-xl p-6 border border-gray-700 mt-4">
            <div class="flex items-center justify-between mb-4">
              <span class="text-gray-400 text-sm">Uso Básico</span>
              <button class="text-gray-400 hover:text-white transition-colors text-sm">
                Copiar
              </button>
            </div>
            <pre class="text-blue-400 font-mono text-sm overflow-x-auto"><code>const { Database } = require('helper.db');
const db = new Database();

// Definir um valor
db.set('usuario', { nome: 'João', idade: 25 });

// Obter um valor
const usuario = db.get('usuario');
console.log(usuario); // { nome: 'João', idade: 25 }</code></pre>
          </div>
        </div>
      </div>
    </section>
  </main>
</Layout>
